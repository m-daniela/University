Problem: The furnace

Design and implement a control module to control power of a furnace in order to increase
the production efficiency. The power (small, medium, high) will depend on the temperature
inside the furnace (cold, cool, moderate, hot, veryhot) and of the capacity of the furnace
(small, medium, high) -see Figure4, Figure 5, Figure 6. The rules are given in Table 2.


Algorithm

The Mamdani model is based on the rule "if x is in A and y is in B, then z is in C", 
where x, y are input variables and z is the output variable => z belongs to a fuzzy set.
The model takes as parameters a value for temperature and one for the capacity. 

The fuzzy variables, temperature and capacity, are created and each has a 
name, map of regions (based on the figure) and the definition set. The map contains 
the name of the region and a membership function (trapezoid or triangle) which will 
be used to compute the membership degree of a given value to that region.

The fuzzy system takes a set of rules (from the table) and the variables defined above. 
Pass through each rule and compute the fuzzy value for the expected value from the table, 
which will be the minimun between the fuzzy values of the membership degrees of temperature 
and capacity in the correspoding regions.

Aggregate the results by taking the maximum of the values for each region for the output
(in this case, power).

In the end, defuzzify the result by applying the Centroid Area method for a number of points 
by finding the centre of gravity for the shape.


Computations

Example 1

temperature = 100.0
capacity = 9.0

Rule 1: if temperature is cold and capacity is small then power is small
miu_temp(100.0): 0.0, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 2: if temperature is cold and capacity is medium then power is medium
miu_temp(100.0): 0.0, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 3: if temperature is cold and capacity is high then power is high
miu_temp(100.0): 0.0, miu_cap(9.0): 0.8
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 4: if temperature is cool and capacity is small then power is small
miu_temp(100.0): 0.0, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 5: if temperature is cool and capacity is medium then power is medium
miu_temp(100.0): 0.0, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 6: if temperature is cool and capacity is high then power is high
miu_temp(100.0): 0.0, miu_cap(9.0): 0.8
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 7: if temperature is moderate and capacity is small then power is small
miu_temp(100.0): 0.0, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 8: if temperature is moderate and capacity is medium then power is small
miu_temp(100.0): 0.0, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 9: if temperature is moderate and capacity is high then power is small
miu_temp(100.0): 0.0, miu_cap(9.0): 0.8
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 10: if temperature is hot and capacity is small then power is small
miu_temp(100.0): 0.5, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 11: if temperature is hot and capacity is medium then power is small
miu_temp(100.0): 0.5, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 12: if temperature is hot and capacity is high then power is small
miu_temp(100.0): 0.5, miu_cap(9.0): 0.8
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.5

Rule 13: if temperature is vhot and capacity is small then power is small
miu_temp(100.0): 0.5, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 14: if temperature is vhot and capacity is medium then power is small
miu_temp(100.0): 0.5, miu_cap(9.0): 0.0
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.0

Rule 15: if temperature is vhot and capacity is high then power is small
miu_temp(100.0): 0.5, miu_cap(9.0): 0.8
miu_power = min(miu_temp(100.0), miu_cap(9.0) = 0.5


Percentages of each region (according to the power figure) 
small: 0.5, medium: 0.0, high: 0.0

Result after applying the centroid area method for the numbers between [0, 20]: power = 3.625
COG = (0 * 0.0 + 1 * 0.5 + 2 * 1.0 + 3 * 1.5 + 4 * 2.0 + 5 * 2.5 + 6 * 2.4000000000000004 +
	+ 7 * 2.1 + 8 * 1.6 + 9 * 0.9 + 10 * 0.0 + 11 * 0.0 + 12 * 0.0 + 13 * 0.0 + 14 * 0.0 + 
	+ 15 * 0.0 + 16 * 0.0 + 17 * 0.0 + 18 * 0.0 + 19 * 0.0 + 20 * 0.0) / 
	/ (0.5 + 0.5 + 0.5 + 0.5 + 0.5 + 0.5 + 0.4 + 0.3 + 0.2 + 0.1 + 0.0 + 0.0 + 0.0 + 0.0 +
	+ 0.0 + 0.0 + 0.0 + 0.0 + 0.0 + 0.0 + 0.0) = 3.625

Example 2:

temperature = 40.0
capacity = 6.0

Rule 1: if temperature is cold and capacity is small then power is small
miu_temp(40.0): 0.5, miu_cap(6.0): 0.0
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 2: if temperature is cold and capacity is medium then power is medium
miu_temp(40.0): 0.5, miu_cap(6.0): 0.5
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.5

Rule 3: if temperature is cold and capacity is high then power is high
miu_temp(40.0): 0.5, miu_cap(6.0): 0.2
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.2

Rule 4: if temperature is cool and capacity is small then power is small
miu_temp(40.0): 0.5, miu_cap(6.0): 0.0
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 5: if temperature is cool and capacity is medium then power is medium
miu_temp(40.0): 0.5, miu_cap(6.0): 0.5
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.5

Rule 6: if temperature is cool and capacity is high then power is high
miu_temp(40.0): 0.5, miu_cap(6.0): 0.2
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.2

Rule 7: if temperature is moderate and capacity is small then power is small
miu_temp(40.0): 0.0, miu_cap(6.0): 0.0
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 8: if temperature is moderate and capacity is medium then power is small
miu_temp(40.0): 0.0, miu_cap(6.0): 0.5
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 9: if temperature is moderate and capacity is high then power is small
miu_temp(40.0): 0.0, miu_cap(6.0): 0.2
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 10: if temperature is hot and capacity is small then power is small
miu_temp(40.0): 0.0, miu_cap(6.0): 0.0
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 11: if temperature is hot and capacity is medium then power is small
miu_temp(40.0): 0.0, miu_cap(6.0): 0.5
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 12: if temperature is hot and capacity is high then power is small
miu_temp(40.0): 0.0, miu_cap(6.0): 0.2
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 13: if temperature is vhot and capacity is small then power is small
miu_temp(40.0): 0.0, miu_cap(6.0): 0.0
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 14: if temperature is vhot and capacity is medium then power is small
miu_temp(40.0): 0.0, miu_cap(6.0): 0.5
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0

Rule 15: if temperature is vhot and capacity is high then power is small
miu_temp(40.0): 0.0, miu_cap(6.0): 0.2
miu_power = min(miu_temp(40.0), miu_cap(6.0) = 0.0


Percentages of each region (according to the power figure): 
small: 0.0, medium: 0.5, high: 0.2

Result after applying the centroid area method for the numbers between [0, 20]: 10.753968253968257
COG = (0 * 0.0 + 1 * 0.0 + 2 * 0.0 + 3 * 0.0 + 4 * 0.0 + 5 * 0.0 + 6 * 1.2000000000000002 + 
	+ 7 * 2.8000000000000003 + 8 * 4.0 + 9 * 4.5 + 10 * 5.0 + 11 * 5.5 + 12 * 6.0 + 13 * 5.2 + 
	+ 14 * 2.8000000000000003 + 15 * 2.5 + 16 * 2.1333333333333333 + 17 * 1.7000000000000002 + 
	+ 18 * 1.2 + 19 * 0.6333333333333333 + 20 * 0.0) / 
	/ (0.0 + 0.0 + 0.0 + 0.0 + 0.0 + 0.0 + 0.2 + 0.4 + 0.5 + 0.5 + 0.5 + 0.5 + 0.5 + 0.4 + 0.2 +
	+ 0.16666666666666669 + 0.13333333333333333 + 0.1 + 0.06666666666666667 + 0.03333333333333333 + 0.0) = 10.753968253968257


