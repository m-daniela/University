%{
#include <stdio.h>
int line = 0;
%}

%option noyywrap
%option caseless

LETTER   [a-zA-Z]
DIGIT   [0-9]
IDENTIFIER   {LETTER}({LETTER}|{DIGIT}|_)*

INT   0|^([+\-])?[1-9]+[0-9]*
CHAR   "'"[^\n]"'"
STRING   ["][^\n]*["]

WRONG_NUMBER   [+-]?0[0-9]*
WRONG_IDENT   ({LETTER}|[!@#$%^&*])+{IDENTIFIER}

%%
[\t]+   {}
[\n]+   {line++;}

"="   {printf("Operator %s\n", yytext); /*return "=";*/}
"+"   {printf("Operator %s\n", yytext); /*return "+";*/}
"-"   {printf("Operator %s\n", yytext); /*return "-";*/}
"*"   {printf("Operator %s\n", yytext); /*return "*";*/}
"/"   {printf("Operator %s\n", yytext); /*return "/";*/}
"=="   {printf("Operator %s\n", yytext); /*return "==";*/}
"<"   {printf("Operator %s\n", yytext); /*return "<";*/}
">"   {printf("Operator %s\n", yytext); /*return ">";*/}
"<="   {printf("Operator %s\n", yytext); /*return "<=";*/}
">="   {printf("Operator %s\n", yytext); /*return ">=";*/}
"!="   {printf("Operator %s\n", yytext); /*return "!=";*/}
"&&"   {printf("Operator %s\n", yytext); /*return "&&";*/}
"||"   {printf("Operator %s\n", yytext); /*return "||";*/}
"%"   {printf("Operator %s\n", yytext); /*return "%";*/}
"!"   {printf("Operator %s\n", yytext); /*return "!";*/}

"("   {printf("Separator %s\n", yytext); /*return "(";*/}
")"   {printf("Separator %s\n", yytext); /*return ")";*/}
"["   {printf("Separator %s\n", yytext); /*return "[";*/}
"]"   {printf("Separator %s\n", yytext); /*return "]";*/}
"{"   {printf("Separator %s\n", yytext); /*return "{";*/}
"}"   {printf("Separator %s\n", yytext); /*return "}";*/}
","   {printf("Separator %s\n", yytext); /*return ",";*/}
";"   {printf("Separator %s\n", yytext); /*return ";";*/}

NUMBER   {printf("Reserved word %s\n", yytext); /*return NUMBER;*/}
STRING   {printf("Reserved word %s\n", yytext); /*return STRING;*/}
CHAR   {printf("Reserved word %s\n", yytext); /*return CHAR;*/}
BOOL   {printf("Reserved word %s\n", yytext); /*return BOOL;*/}
VOID   {printf("Reserved word %s\n", yytext); /*return VOID;*/}
CONST   {printf("Reserved word %s\n", yytext); /*return CONST;*/}
WHILE   {printf("Reserved word %s\n", yytext); /*return WHILE;*/}
FOR   {printf("Reserved word %s\n", yytext); /*return FOR;*/}
IF   {printf("Reserved word %s\n", yytext); /*return IF;*/}
ELSE   {printf("Reserved word %s\n", yytext); /*return ELSE;*/}
ELSEIF   {printf("Reserved word %s\n", yytext); /*return ELSEIF;*/}
FUNCTION   {printf("Reserved word %s\n", yytext); /*return FUNCTION;*/}
READ   {printf("Reserved word %s\n", yytext); /*return READ;*/}
WRITE   {printf("Reserved word %s\n", yytext); /*return WRITE;*/}
IN   {printf("Reserved word %s\n", yytext); /*return IN;*/}
TRUE   {printf("Reserved word %s\n", yytext); /*return TRUE;*/}
FALSE   {printf("Reserved word %s\n", yytext); /*return FALSE;*/}
STOP   {printf("Reserved word %s\n", yytext); /*return STOP;*/}

{INT}   {printf("Constant %s\n", yytext);}
{STRING}   {printf("Constant %s\n", yytext);}
{CHAR}   {printf("Constant %s\n", yytext);}

{IDENTIFIER}   {printf("Identifier %s\n", yytext);}

{WRONG_NUMBER}   {printf("Error: number %s at line %d\n", yytext, line); return -1;}
{WRONG_IDENT}	{printf("Error: identifier %s at line %d\n", yytext, line); return -1;}


%%

int main(){
	yylex();
	return 0;
}